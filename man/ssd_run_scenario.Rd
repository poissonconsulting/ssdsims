% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run-scenario.R
\name{ssd_run_scenario}
\alias{ssd_run_scenario}
\alias{ssd_run_scenario.data.frame}
\alias{ssd_run_scenario.fitdists}
\alias{ssd_run_scenario.tmbfit}
\alias{ssd_run_scenario.character}
\alias{ssd_run_scenario.function}
\title{Run Scenario}
\usage{
ssd_run_scenario(x, ...)

\method{ssd_run_scenario}{data.frame}(
  x,
  ...,
  replace = FALSE,
  nrow = c(6L, 10L),
  dists = ssdtools::ssd_dists_bcanz(),
  proportion = 0.05,
  ci = FALSE,
  seed = NULL,
  nsim = 100L,
  stream = getOption("ssdsims.stream", 1L),
  start_sim = 1L,
  .progress = FALSE
)

\method{ssd_run_scenario}{fitdists}(
  x,
  ...,
  dist_sims = "top",
  nrow = c(6L, 10L),
  dists = ssdtools::ssd_dists_bcanz(),
  proportion = 0.05,
  ci = FALSE,
  seed = NULL,
  nsim = 100L,
  stream = getOption("ssdsims.stream", 1L),
  start_sim = 1L,
  .progress = FALSE
)

\method{ssd_run_scenario}{tmbfit}(
  x,
  ...,
  nrow = c(6L, 10L),
  dists = ssdtools::ssd_dists_bcanz(),
  proportion = 0.05,
  ci = FALSE,
  seed = NULL,
  nsim = 100L,
  stream = getOption("ssdsims.stream", 1L),
  start_sim = 1L,
  .progress = FALSE
)

\method{ssd_run_scenario}{character}(
  x,
  ...,
  args = list(),
  nrow = c(6L, 10L),
  dists = ssdtools::ssd_dists_bcanz(),
  proportion = 0.05,
  ci = FALSE,
  seed = NULL,
  nsim = 100L,
  stream = getOption("ssdsims.stream", 1L),
  start_sim = 1L,
  .progress = FALSE
)

\method{ssd_run_scenario}{`function`}(
  x,
  ...,
  args = list(),
  nrow = c(6L, 10L),
  dists = ssdtools::ssd_dists_bcanz(),
  proportion = 0.05,
  ci = FALSE,
  seed = NULL,
  nsim = 100L,
  stream = getOption("ssdsims.stream", 1L),
  start_sim = 1L,
  .progress = FALSE
)
}
\arguments{
\item{x}{The object to use for the scenario.}

\item{...}{Unused.}

\item{replace}{A flag specifying whether to sample with replacement.}

\item{nrow}{A positive whole number of the minimum number of non-missing rows.}

\item{dists}{A character vector of the distribution names.}

\item{proportion}{A numeric vector of proportion values to estimate hazard concentrations for.}

\item{ci}{A flag specifying whether to estimate confidence intervals (by bootstrapping).}

\item{seed}{An integer of the starting seed or NULL.}

\item{nsim}{A count of the number of data sets to generate.}

\item{stream}{A count of the stream number.}

\item{start_sim}{A count of the number of the simulation to start from.}

\item{.progress}{Whether to show a \verb{purrr::progress bar}.}

\item{dist_sims}{A string specifying the distribution in the fitdists object or
\code{"top"} to use the distribution with most weight or \code{"multi"} to treat
the distributions as a single distribution.}

\item{args}{A named list of the argument values.}
}
\value{
A tibble of nested data sets.
}
\description{
Run Scenario
}
\section{Methods (by class)}{
\itemize{
\item \code{ssd_run_scenario(data.frame)}: Run scenario using data.frame to sample data

\item \code{ssd_run_scenario(fitdists)}: Run scenario using fitdists object to generate data

\item \code{ssd_run_scenario(tmbfit)}: Run scenario using tmbfit object to generate data

\item \code{ssd_run_scenario(character)}: Run scenario using name of function to generate sequence of random numbers

\item \code{ssd_run_scenario(`function`)}: Run scenario data using function to generate sequence of random numbers

}}
\examples{
ssd_run_scenario(ssddata::ccme_boron, nsim = 2)

fit <- ssdtools::ssd_fit_dists(ssddata::ccme_boron)
ssd_run_scenario(fit, dist_sim = c("lnorm", "top"), nsim = 3)

fit <- ssdtools::ssd_fit_dists(ssddata::ccme_boron)
ssd_run_scenario(fit[[1]], nsim = 3)

ssd_run_scenario("rlnorm", nsim = 3)

ssd_run_scenario(ssdtools::ssd_rlnorm, nsim = 3)

}
